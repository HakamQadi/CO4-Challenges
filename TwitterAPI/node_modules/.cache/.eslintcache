[{"C:\\Users\\hakam\\OneDrive\\Desktop\\twitterchallenge\\src\\index.js":"1","C:\\Users\\hakam\\OneDrive\\Desktop\\twitterchallenge\\src\\reportWebVitals.js":"2","C:\\Users\\hakam\\OneDrive\\Desktop\\twitterchallenge\\src\\App.js":"3"},{"size":535,"mtime":1689456163209,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1688999795068,"results":"6","hashOfConfig":"5"},{"size":1581,"mtime":1690506595312,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"11"},"1flp5uv",{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"11"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"C:\\Users\\hakam\\OneDrive\\Desktop\\twitterchallenge\\src\\index.js",[],[],[],"C:\\Users\\hakam\\OneDrive\\Desktop\\twitterchallenge\\src\\reportWebVitals.js",[],[],"C:\\Users\\hakam\\OneDrive\\Desktop\\twitterchallenge\\src\\App.js",["19"],[],"import axios from 'axios';\nimport './App.css';\nimport { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport profile_img from './profile.png';\n\nfunction App() {\n  const [dataToServer, setDataServer] = useState('');\n  const [tweets, setTweets] = useState([]);\n\n  const sendData = async () => {\n    try {\n      // await axios.post('http://127.0.0.1:8080', { tweet: dataToServer });\n      // setDataServer('');\n\n      await axios.post('http://127.0.0.1:8080', { tweet: dataToServer });\n      setTweets(prevTweets => [...prevTweets, dataToServer]);\n      setDataServer('');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  function getValue(e) {\n    // const value = e.target.value\n    setDataServer(e.target.value)\n    // setTweets(value)\n\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"tweet-container\">\n        <div className=\"d-flex gap-2\">\n          <img alt='' src={profile_img} style={{ borderRadius: '50%', width: \"50px\", height: \"50px\" }}></img>\n          <textarea onChange={getValue} value={dataToServer} placeholder=\"What's happening?\"></textarea>\n        </div>\n        <div className='actions'>\n          <button id='btn' onClick={sendData}>Tweet</button>\n          <span className=\"char-count\">140</span>\n        </div>\n        <hr />\n        {/* <h3>My Tweets</h3> */}\n        {/* {tweets.length > 0 ? (\n          tweets.map((tweet, index) => (\n            <div key={index}>{tweet}</div>\n          ))\n        ) : (\n          <div>No tweets yet.</div>\n        )} */}\n      </div>\n    </div>\n  );\n}\n\nexport default App;",{"ruleId":"20","severity":1,"message":"21","line":9,"column":10,"nodeType":"22","messageId":"23","endLine":9,"endColumn":16},"no-unused-vars","'tweets' is assigned a value but never used.","Identifier","unusedVar"]