{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hakam\\\\OneDrive\\\\Desktop\\\\twitterchallenge\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport './App.css';\nimport { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport profile_img from './profile.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tweet, setTweet] = useState(''); // Rename state variable to 'tweet'\n  const [tweets, setTweets] = useState([]);\n  const sendData = async () => {\n    try {\n      await axios.post('http://127.0.0.1:8080', {\n        tweet: tweet\n      }); // Use 'tweet' state here\n      setTweets(prevTweets => [...prevTweets, tweet]);\n      setTweet(''); // Reset the tweet state after successful POST\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  function getValue(e) {\n    setTweet(e.target.value); // Update the 'tweet' state, not 'dataToServer'\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tweet-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"\",\n          src: profile_img,\n          style: {\n            borderRadius: '50%',\n            width: \"50px\",\n            height: \"50px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: getValue,\n          value: tweet,\n          placeholder: \"What's happening?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"btn\",\n          onClick: sendData,\n          children: \"Twit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"char-count\",\n          children: \"140\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"h+79hXydDz50727EltM5URNTohE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["axios","useState","profile_img","jsxDEV","_jsxDEV","App","_s","tweet","setTweet","tweets","setTweets","sendData","post","prevTweets","error","console","log","getValue","e","target","value","className","children","alt","src","style","borderRadius","width","height","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hakam/OneDrive/Desktop/twitterchallenge/src/App.js"],"sourcesContent":["import axios from 'axios';\nimport './App.css';\nimport { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport profile_img from './profile.png';\n\nfunction App() {\n  const [tweet, setTweet] = useState(''); // Rename state variable to 'tweet'\n  const [tweets, setTweets] = useState([]);\n\n  const sendData = async () => {\n    try {\n      await axios.post('http://127.0.0.1:8080', { tweet: tweet }); // Use 'tweet' state here\n      setTweets(prevTweets => [...prevTweets, tweet]);\n      setTweet(''); // Reset the tweet state after successful POST\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  function getValue(e) {\n    setTweet(e.target.value); // Update the 'tweet' state, not 'dataToServer'\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"tweet-container\">\n        <div className=\"d-flex gap-2\">\n          <img alt='' src={profile_img} style={{ borderRadius: '50%', width: \"50px\", height: \"50px\" }}></img>\n          <textarea onChange={getValue} value={tweet} placeholder=\"What's happening?\"></textarea>\n        </div>\n        <div className='actions'>\n          <button id='btn' onClick={sendData}>Twit</button>\n          <span className=\"char-count\">140</span>\n        </div>\n        <hr />\n        {/* <h3>My Tweets</h3> */}\n        {/* {tweets.length > 0 ? (\n          tweets.map((tweet, index) => (\n            <div key={index}>{tweet}</div>\n          ))\n        ) : (\n          <div>No tweets yet.</div>\n        )} */}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAClB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAO,kCAAkC;AACzC,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMU,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACF,MAAMX,KAAK,CAACY,IAAI,CAAC,uBAAuB,EAAE;QAAEL,KAAK,EAAEA;MAAM,CAAC,CAAC,CAAC,CAAC;MAC7DG,SAAS,CAACG,UAAU,IAAI,CAAC,GAAGA,UAAU,EAAEN,KAAK,CAAC,CAAC;MAC/CC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IAChB,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF,CAAC;EAED,SAASG,QAAQA,CAACC,CAAC,EAAE;IACnBV,QAAQ,CAACU,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EAC5B;;EAEA,oBACEhB,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBlB,OAAA;MAAKiB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BlB,OAAA;QAAKiB,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3BlB,OAAA;UAAKmB,GAAG,EAAC,EAAE;UAACC,GAAG,EAAEtB,WAAY;UAACuB,KAAK,EAAE;YAAEC,YAAY,EAAE,KAAK;YAAEC,KAAK,EAAE,MAAM;YAAEC,MAAM,EAAE;UAAO;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACnG5B,OAAA;UAAU6B,QAAQ,EAAEhB,QAAS;UAACG,KAAK,EAAEb,KAAM;UAAC2B,WAAW,EAAC;QAAmB;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpF,CAAC,eACN5B,OAAA;QAAKiB,SAAS,EAAC,SAAS;QAAAC,QAAA,gBACtBlB,OAAA;UAAQ+B,EAAE,EAAC,KAAK;UAACC,OAAO,EAAEzB,QAAS;UAAAW,QAAA,EAAC;QAAI;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACjD5B,OAAA;UAAMiB,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAAG;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC,eACN5B,OAAA;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC1B,EAAA,CAzCQD,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AA2CZ,eAAeA,GAAG;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}