{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hakam\\\\OneDrive\\\\Desktop\\\\twitterchallenge\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport './App.css';\nimport { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport profile_img from './profile.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [dataToServer, setDataServer] = useState('');\n  const [tweets, setTweets] = useState([]);\n  const sendData = async () => {\n    try {\n      // tweets.push(dataToServer)\n      const response = await axios.post('http://127.0.0.1:8080', {\n        tweet: dataToServer\n      });\n      // setTweets(dataToServer)\n      const newTweet = response.data.tweet; // Assuming the server returns the posted tweet in the response\n      setTweets(prevTweets => [...prevTweets, newTweet]);\n      // setDataServer('')\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tweet-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"\",\n          src: profile_img,\n          style: {\n            borderRadius: '50%',\n            width: \"50px\",\n            height: \"50px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: e => setDataServer(e.target.value),\n          value: dataToServer,\n          placeholder: \"What's happening?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"btn\",\n          onClick: sendData,\n          children: \"Twit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"char-count\",\n          children: \"140\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"My Tweets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), tweets.map((tweet, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: tweet\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Tu+prINLSvFe9RJTWa1QC7wmGcs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["axios","useState","profile_img","jsxDEV","_jsxDEV","App","_s","dataToServer","setDataServer","tweets","setTweets","sendData","response","post","tweet","newTweet","data","prevTweets","error","console","log","className","children","alt","src","style","borderRadius","width","height","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","placeholder","id","onClick","map","index","_c","$RefreshReg$"],"sources":["C:/Users/hakam/OneDrive/Desktop/twitterchallenge/src/App.js"],"sourcesContent":["import axios from 'axios';\nimport './App.css'\nimport { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport profile_img from './profile.png'\n\nfunction App() {\n  const [dataToServer, setDataServer] = useState('');\n  const [tweets, setTweets] = useState([]);\n\n\n  const sendData = async () => {\n    try {\n      // tweets.push(dataToServer)\n      const response = await axios.post('http://127.0.0.1:8080', { tweet: dataToServer });\n      // setTweets(dataToServer)\n      const newTweet = response.data.tweet; // Assuming the server returns the posted tweet in the response\n      setTweets(prevTweets => [...prevTweets, newTweet]);\n      // setDataServer('')\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"tweet-container\">\n        <div className=\"d-flex gap-2\">\n          <img alt='' src={profile_img} style={{ borderRadius: '50%', width: \"50px\", height: \"50px\" }}></img>\n          <textarea onChange={e => setDataServer(e.target.value)} value={dataToServer} placeholder=\"What's happening?\"></textarea>\n        </div>\n        <div className='actions'>\n          <button id='btn' onClick={sendData}>Twit</button>\n          <span className=\"char-count\">140</span>\n        </div>\n        <hr />\n        <h3>My Tweets</h3>\n        {\n          tweets.map((tweet, index) => {\n            return (\n              <div key={index}>{tweet}</div>\n            )\n          })\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}