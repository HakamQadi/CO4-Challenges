{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hakam\\\\OneDrive\\\\Desktop\\\\twitterchallenge\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport './App.css';\nimport { useState, useRef } from 'react'; // Step 1: Import useRef\nimport 'bootstrap/dist/css/bootstrap.css';\nimport profile_img from './profile.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [dataToServer, setDataServer] = useState('');\n  const [tweets, setTweets] = useState([]);\n  const textAreaRef = useRef(null); // Step 2: Create a ref for the textarea element\n\n  const sendData = async () => {\n    try {\n      await axios.post('http://127.0.0.1:8080', {\n        tweet: dataToServer\n      });\n      setTweets(prevTweets => [...prevTweets, dataToServer]);\n      setDataServer('');\n      textAreaRef.current.value = ''; // Step 3: Clear the textarea value\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  function getValue(e) {\n    setDataServer(e.target.value);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tweet-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"\",\n          src: profile_img,\n          style: {\n            borderRadius: '50%',\n            width: \"50px\",\n            height: \"50px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: textAreaRef // Step 2: Assign the ref to the textarea element\n          ,\n          onChange: getValue,\n          value: dataToServer,\n          placeholder: \"What's happening?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"btn\",\n          onClick: sendData,\n          children: \"Twit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"char-count\",\n          children: \"140\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"yFc1vdoz2cd8KBFp/jkwu64k7Oo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["axios","useState","useRef","profile_img","jsxDEV","_jsxDEV","App","_s","dataToServer","setDataServer","tweets","setTweets","textAreaRef","sendData","post","tweet","prevTweets","current","value","error","console","log","getValue","e","target","className","children","alt","src","style","borderRadius","width","height","fileName","_jsxFileName","lineNumber","columnNumber","ref","onChange","placeholder","id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hakam/OneDrive/Desktop/twitterchallenge/src/App.js"],"sourcesContent":["import axios from 'axios';\nimport './App.css';\nimport { useState, useRef } from 'react'; // Step 1: Import useRef\nimport 'bootstrap/dist/css/bootstrap.css';\nimport profile_img from './profile.png';\n\nfunction App() {\n  const [dataToServer, setDataServer] = useState('');\n  const [tweets, setTweets] = useState([]);\n  const textAreaRef = useRef(null); // Step 2: Create a ref for the textarea element\n\n  const sendData = async () => {\n    try {\n      await axios.post('http://127.0.0.1:8080', { tweet: dataToServer });\n      setTweets(prevTweets => [...prevTweets, dataToServer]);\n      setDataServer('');\n      textAreaRef.current.value = ''; // Step 3: Clear the textarea value\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  function getValue(e) {\n    setDataServer(e.target.value);\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"tweet-container\">\n        <div className=\"d-flex gap-2\">\n          <img alt='' src={profile_img} style={{ borderRadius: '50%', width: \"50px\", height: \"50px\" }}></img>\n          <textarea\n            ref={textAreaRef} // Step 2: Assign the ref to the textarea element\n            onChange={getValue}\n            value={dataToServer}\n            placeholder=\"What's happening?\"\n          ></textarea>\n        </div>\n        <div className='actions'>\n          <button id='btn' onClick={sendData}>Twit</button>\n          <span className=\"char-count\">140</span>\n        </div>\n        <hr />\n        {/* <h3>My Tweets</h3> */}\n        {/* {tweets.length > 0 ? (\n          tweets.map((tweet, index) => (\n            <div key={index}>{tweet}</div>\n          ))\n        ) : (\n          <div>No tweets yet.</div>\n        )} */}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}